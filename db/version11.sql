-- MySQL Script generated by MySQL Workbench
-- Mon Oct  7 03:23:48 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`SCHOOL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SCHOOL` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(250) NOT NULL,
  `ADDRESS` VARCHAR(250) NOT NULL,
  `PHONE_NUMBER` VARCHAR(255) NULL,
  `EMAIL` VARCHAR(255) NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`ADMIN`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ADMIN` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `SCHOOL_ID` INT NOT NULL,
  `FIRSTNAME` VARCHAR(255) NOT NULL,
  `LASTNAME` VARCHAR(255) NOT NULL,
  `EMAIL` VARCHAR(255) NOT NULL,
  `PASSWORD` VARCHAR(255) NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `EMAIL_UNIQUE` (`EMAIL` ASC) VISIBLE,
  INDEX `SCHOOL_ID_idx` (`SCHOOL_ID` ASC) VISIBLE,
  CONSTRAINT `SCHOOL_ID_ADMIN`
    FOREIGN KEY (`SCHOOL_ID`)
    REFERENCES `mydb`.`SCHOOL` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`ADMIN_INFO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ADMIN_INFO` (
  `ADMIN_ID` INT NOT NULL,
  `PASSPORT_ID` VARCHAR(255) NOT NULL,
  `SOCIAL_CARD_ID` VARCHAR(255) NOT NULL,
  `BIRTH_DATE` BIGINT NOT NULL,
  `PHONE_NUMBER` VARCHAR(255) NOT NULL,
  `ADDRESS` VARCHAR(255) NOT NULL,
  `IMAGE_URL` VARCHAR(255) NULL,
  `GENDER` INT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  UNIQUE INDEX `ADMIN_ID_UNIQUE` (`ADMIN_ID` ASC) VISIBLE,
  UNIQUE INDEX `PASSPORT_ID_UNIQUE` (`PASSPORT_ID` ASC) VISIBLE,
  UNIQUE INDEX `SOCIAL_CARD_ID_UNIQUE` (`SOCIAL_CARD_ID` ASC) VISIBLE,
  CONSTRAINT `ADMIN_IN_ADMIN_INFO`
    FOREIGN KEY (`ADMIN_ID`)
    REFERENCES `mydb`.`ADMIN` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`COURSE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`COURSE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `SCHOOL_ID` INT NOT NULL,
  `NAME` VARCHAR(255) NOT NULL,
  `DESCRIPTION` TEXT NOT NULL,
  `DURATION` INT NOT NULL,
  `DURATION_UNIT_TYPE` INT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `SCHOOL_ID_COURSE_idx` (`SCHOOL_ID` ASC) VISIBLE,
  CONSTRAINT `SCHOOL_ID_COURSE`
    FOREIGN KEY (`SCHOOL_ID`)
    REFERENCES `mydb`.`SCHOOL` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`LESSON`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`LESSON` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `COURSE_ID` INT NOT NULL,
  `NAME` VARCHAR(255) NOT NULL,
  `CONTENT` TEXT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `COURSE_ID_LESSON_idx` (`COURSE_ID` ASC) VISIBLE,
  CONSTRAINT `COURSE_ID_LESSON`
    FOREIGN KEY (`COURSE_ID`)
    REFERENCES `mydb`.`COURSE` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`TEST`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TEST` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `LESSON_ID` INT NOT NULL,
  `TITLE` VARCHAR(255) NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `LESSON_ID_idx` (`LESSON_ID` ASC) VISIBLE,
  CONSTRAINT `LESSON_ID_TEST`
    FOREIGN KEY (`LESSON_ID`)
    REFERENCES `mydb`.`LESSON` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`QUESTION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`QUESTION` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TEST_ID` INT NOT NULL,
  `CONTENT` TEXT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `TEST_ID_idx` (`TEST_ID` ASC) VISIBLE,
  CONSTRAINT `TEST_ID_QUESTION`
    FOREIGN KEY (`TEST_ID`)
    REFERENCES `mydb`.`TEST` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`ANSWER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ANSWER` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `QUESTION_ID` INT NOT NULL,
  `CONTENT` TEXT NOT NULL,
  `SCORE` INT NOT NULL DEFAULT '0',
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `QUESTION_ID_idx` (`QUESTION_ID` ASC) VISIBLE,
  CONSTRAINT `QUESTION_ID_ANSWER`
    FOREIGN KEY (`QUESTION_ID`)
    REFERENCES `mydb`.`QUESTION` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`USER` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `FIRSTNAME` VARCHAR(255) NOT NULL,
  `LASTNAME` VARCHAR(255) NOT NULL,
  `EMAIL` VARCHAR(255) NOT NULL,
  `PASSWORD` VARCHAR(255) NOT NULL,
  `STATUS` INT NOT NULL,
  `TYPE` INT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `EMAIL_UNIQUE` (`EMAIL` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`ASSIGNMENT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ASSIGNMENT` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TEACHER_ID` INT NOT NULL,
  `LESSON_ID` INT NOT NULL,
  `START_DATE` BIGINT NOT NULL,
  `END_DATE` BIGINT NOT NULL,
  `TITLE` VARCHAR(255) NOT NULL,
  `DESCRIPTION` TEXT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `LESSON_ID_ASSIGNMENT_idx` (`LESSON_ID` ASC) VISIBLE,
  INDEX `TEACHER_ID_ASSIGNMENT_idx` (`TEACHER_ID` ASC) VISIBLE,
  CONSTRAINT `LESSON_ID_ASSIGNMENT`
    FOREIGN KEY (`LESSON_ID`)
    REFERENCES `mydb`.`LESSON` (`ID`),
  CONSTRAINT `TEACHER_ID_ASSIGNMENT`
    FOREIGN KEY (`TEACHER_ID`)
    REFERENCES `mydb`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`ASSIGNMENT_COMPLETED`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ASSIGNMENT_COMPLETED` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `STUDENT_ID` INT NOT NULL,
  `ASSIGNMENT_ID` INT NOT NULL,
  `CONTENT_URL` VARCHAR(255) NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `HOMEWORK_ID_ASSIGNMENT_FEEDBACK_idx` (`ASSIGNMENT_ID` ASC) VISIBLE,
  INDEX `STUDENT_ID_ASSIGNMENT_FEEDBACK_idx` (`STUDENT_ID` ASC) VISIBLE,
  CONSTRAINT `HOMEWORK_ID_ASSIGNMENT_COMPLETED`
    FOREIGN KEY (`ASSIGNMENT_ID`)
    REFERENCES `mydb`.`ASSIGNMENT` (`ID`),
  CONSTRAINT `STUDENT_ID_ASSIGNMENT_COMPLETED`
    FOREIGN KEY (`STUDENT_ID`)
    REFERENCES `mydb`.`USER` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`ASSESSMENT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ASSESSMENT` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `STUDENT_ID` INT NOT NULL,
  `ASSIGNMENT_COMPLETED_ID` INT NOT NULL,
  `SCORE` INT NOT NULL,
  `COMMENT` TEXT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `USER_ID_idx` (`STUDENT_ID` ASC) VISIBLE,
  INDEX `ASSIGNMENT_COMPLETED_ID_ASSESMENT_idx` (`ASSIGNMENT_COMPLETED_ID` ASC) VISIBLE,
  CONSTRAINT `ASSIGNMENT_COMPLETED_ID_ASSESMENT`
    FOREIGN KEY (`ASSIGNMENT_COMPLETED_ID`)
    REFERENCES `mydb`.`ASSIGNMENT_COMPLETED` (`ID`),
  CONSTRAINT `USER_ID_ASSESMENT`
    FOREIGN KEY (`STUDENT_ID`)
    REFERENCES `mydb`.`USER` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`CLASSROOM`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`CLASSROOM` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `SCHOOL_ID` INT NOT NULL,
  `NAME` VARCHAR(255) NOT NULL,
  `CAPACITY` INT NOT NULL,
  `TYPE` INT NOT NULL,
  `SUBJECT` VARCHAR(255) NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE,
  INDEX `SCOOL_ID_NUMBER_UNIQUE` (`SCHOOL_ID` ASC, `NAME` ASC) VISIBLE,
  CONSTRAINT `SCHOOL_ID_CLASSROOM`
    FOREIGN KEY (`SCHOOL_ID`)
    REFERENCES `mydb`.`SCHOOL` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`GROUP`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`GROUP` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `SCHOOL_ID` INT NOT NULL,
  `NAME` VARCHAR(255) NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `SCHOOL_ID_idx` (`SCHOOL_ID` ASC) VISIBLE,
  CONSTRAINT `SCHOOL_ID_GROUP`
    FOREIGN KEY (`SCHOOL_ID`)
    REFERENCES `mydb`.`SCHOOL` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`GROUP_COURSE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`GROUP_COURSE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `GROUP_ID` INT NOT NULL,
  `COURSE_ID` INT NOT NULL,
  `TEACHER_ID` INT NOT NULL,
  `START_DATE` BIGINT NOT NULL,
  `FINISHED` TINYINT(1) NOT NULL DEFAULT 0,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `COURSE_ID_idx` (`COURSE_ID` ASC) VISIBLE,
  INDEX `GROUP_ID_idx` (`GROUP_ID` ASC) VISIBLE,
  INDEX `TEACHER_ID_GROUP_COURSE_idx` (`TEACHER_ID` ASC) VISIBLE,
  CONSTRAINT `COURSE_ID_GROUP_COURSE`
    FOREIGN KEY (`COURSE_ID`)
    REFERENCES `mydb`.`COURSE` (`ID`),
  CONSTRAINT `GROUP_ID_GROUP_COURSE`
    FOREIGN KEY (`GROUP_ID`)
    REFERENCES `mydb`.`GROUP` (`ID`),
  CONSTRAINT `TEACHER_ID_GROUP_COURSE`
    FOREIGN KEY (`TEACHER_ID`)
    REFERENCES `mydb`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`SCHEDULE_RECORD`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SCHEDULE_RECORD` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `GROUP_COURSE_ID` INT NOT NULL,
  `CLASSROOM_ID` INT NOT NULL,
  `LESSON_ID` INT NOT NULL,
  `START_DATE` BIGINT NOT NULL,
  `END_DATE` BIGINT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE,
  INDEX `GROUP_COURSE_ID_SCHEDULE_idx` (`GROUP_COURSE_ID` ASC) VISIBLE,
  INDEX `CLASSROOM_ID_SCHEDULE_idx` (`CLASSROOM_ID` ASC) VISIBLE,
  INDEX `LESSON_ID_SCHEDULE_idx` (`LESSON_ID` ASC) VISIBLE,
  CONSTRAINT `CLASSROOM_ID_SCHEDULE`
    FOREIGN KEY (`CLASSROOM_ID`)
    REFERENCES `mydb`.`CLASSROOM` (`ID`),
  CONSTRAINT `GROUP_COURSE_ID_SCHEDULE`
    FOREIGN KEY (`GROUP_COURSE_ID`)
    REFERENCES `mydb`.`GROUP_COURSE` (`ID`),
  CONSTRAINT `LESSON_ID_SCHEDULE`
    FOREIGN KEY (`LESSON_ID`)
    REFERENCES `mydb`.`LESSON` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`TOPIC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TOPIC` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `LESSON_ID` INT NOT NULL,
  `VIDEO_URL` VARCHAR(250) NOT NULL,
  `WEB_PAGE_URL` VARCHAR(250) NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `LESSON_ID_idx` (`LESSON_ID` ASC) VISIBLE,
  CONSTRAINT `LESSON_ID_TOPIC`
    FOREIGN KEY (`LESSON_ID`)
    REFERENCES `mydb`.`LESSON` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`STUDENT_COMMENT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`STUDENT_COMMENT` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TOPIC_ID` INT NOT NULL,
  `STUDENT_ID` INT NOT NULL,
  `COMMENT` TEXT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `URL_ID_idx` (`TOPIC_ID` ASC) VISIBLE,
  INDEX `USER_ID_idx` (`STUDENT_ID` ASC) VISIBLE,
  CONSTRAINT `STUDENT_ID_STUDENT_COMMENT`
    FOREIGN KEY (`STUDENT_ID`)
    REFERENCES `mydb`.`USER` (`ID`),
  CONSTRAINT `TOPIC_ID_STUDENT_COMMENT`
    FOREIGN KEY (`TOPIC_ID`)
    REFERENCES `mydb`.`TOPIC` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`USER_INFO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`USER_INFO` (
  `USER_ID` INT NOT NULL,
  `PASSPORT_ID` VARCHAR(255) NOT NULL,
  `SOCIAL_CARD_ID` VARCHAR(255) NOT NULL,
  `BIRTH_DATE` BIGINT NOT NULL,
  `PHONE_NUMBER` VARCHAR(255) NOT NULL,
  `ADDRESS` VARCHAR(255) NOT NULL,
  `IMAGE_URL` VARCHAR(255) NULL,
  `GENDER` INT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  UNIQUE INDEX `STUDENT_ID_UNIQUE` (`USER_ID` ASC) VISIBLE,
  UNIQUE INDEX `SOCIAL_CARD_ID_UNIQUE` (`SOCIAL_CARD_ID` ASC) VISIBLE,
  UNIQUE INDEX `PASSPORT_ID_UNIQUE` (`PASSPORT_ID` ASC) VISIBLE,
  UNIQUE INDEX `IMAGE_URL_UNIQUE` (`IMAGE_URL` ASC) VISIBLE,
  CONSTRAINT `USER_ID_USER_INFO`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `mydb`.`USER` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`SURVEY_QUESTION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SURVEY_QUESTION` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CONTENT` VARCHAR(100) NOT NULL,
  `INPUT_NAME` VARCHAR(45) NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`SURVEY_RESULT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SURVEY_RESULT` (
  `STUDENT_ID` INT NOT NULL,
  `EXT` FLOAT NOT NULL,
  `EST` FLOAT NOT NULL,
  `AGR` FLOAT NOT NULL,
  `CSN` FLOAT NOT NULL,
  `OPN` FLOAT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  UNIQUE INDEX `STUDENT_ID_UNIQUE` (`STUDENT_ID` ASC),
  CONSTRAINT `STUDENT_ID_SURVEY_RESULT`
    FOREIGN KEY (`STUDENT_ID`)
    REFERENCES `mydb`.`USER` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`TEST_RESULT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TEST_RESULT` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TEST_ID` INT NOT NULL,
  `STUDENT_ID` INT NOT NULL,
  `SCORE` INT NOT NULL,
  `TAKEN_DATE` BIGINT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `USER_ID_TEST_RESULT_idx` (`STUDENT_ID` ASC) VISIBLE,
  INDEX `TEST_ID_TEST_RESULT` (`TEST_ID` ASC) VISIBLE,
  CONSTRAINT `STUDENT_ID_TEST_RESULT`
    FOREIGN KEY (`STUDENT_ID`)
    REFERENCES `mydb`.`USER` (`ID`),
  CONSTRAINT `TEST_ID_TEST_RESULT`
    FOREIGN KEY (`TEST_ID`)
    REFERENCES `mydb`.`TEST` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`STUDENT_GROUP`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`STUDENT_GROUP` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `STUDENT_ID` INT NOT NULL,
  `GROUP_ID` INT NOT NULL,
  `ADMISSION_DATE` BIGINT NOT NULL,
  `CREATION_DATE` BIGINT NOT NULL,
  `CHANGE_DATE` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE,
  INDEX `STUDENT_ID_STUDENT_GROUP_idx` (`STUDENT_ID` ASC) VISIBLE,
  INDEX `GROUP_ID_STUDENT_GROUP_idx` (`GROUP_ID` ASC) VISIBLE,
  CONSTRAINT `STUDENT_ID_STUDENT_GROUP`
    FOREIGN KEY (`STUDENT_ID`)
    REFERENCES `mydb`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `GROUP_ID_STUDENT_GROUP`
    FOREIGN KEY (`GROUP_ID`)
    REFERENCES `mydb`.`GROUP` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1;

USE `mydb`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`SCHOOL_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `SCHOOL` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ADMIN_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `ADMIN` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ADMIN_INFO_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `ADMIN_INFO` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`COURSE_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `COURSE` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`LESSON_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `LESSON` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`TEST_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `TEST` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`QUESTION_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `QUESTION` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ANSWER_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `ANSWER` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`USER_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `USER` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ASSIGNMENT_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `ASSIGNMENT` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ASSIGNMENT_AFTER_INSERT` AFTER INSERT ON `ASSIGNMENT` FOR EACH ROW
BEGIN
INSERT INTO ASSIGNMENT_COMPLETED(STUDENT_ID, ASSIGNMENT_ID, CREATION_DATE)
SELECT DISTINCT SG.STUDENT_ID, NEW.ID, NEW.CREATION_DATE
FROM ASSIGNMENT ASGN 
   JOIN LESSON L ON ASGN.LESSON_ID = L.ID
   JOIN COURSE C ON L.COURSE_ID = C.ID
   JOIN GROUP_COURSE GC ON GC.COURSE_ID = C.ID
   JOIN STUDENT_GROUP SG ON SG.GROUP_ID = GC.GROUP_ID
WHERE ASGN.ID = NEW.ID;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ASSIGNMENT_COMPLETED_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `ASSIGNMENT_COMPLETED` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ASSESSMENT_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `ASSESSMENT` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`CLASSROOM_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `CLASSROOM` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`GROUP_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `GROUP` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`GROUP_COURSE_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `GROUP_COURSE` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`SCHEDULE_RECORD_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `SCHEDULE_RECORD` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`TOPIC_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `TOPIC` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`STUDENT_COMMENT_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `STUDENT_COMMENT` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`USER_INFO_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `USER_INFO` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`SURVEY_QUESTION_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `SURVEY_QUESTION` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`SURVEY_RESULT_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `SURVEY_RESULT` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`TEST_RESULT_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `TEST_RESULT` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`STUDENT_GROUP_CHANGE_DATE_BEFORE_INSERT` BEFORE INSERT ON `STUDENT_GROUP` FOR EACH ROW
BEGIN
IF NEW.CHANGE_DATE IS NULL THEN
    SET NEW.CHANGE_DATE := NEW.CREATION_DATE;
  END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
